/**
 * Bloom API
 * The API for Bloom
 *
 * The version of the OpenAPI document: 2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { AddressCreate } from './addressCreate';
import { ApplicationAddressTypeEnum } from './applicationAddressTypeEnum';
import { ApplicationMethodCreate } from './applicationMethodCreate';
import { AssetCreate } from './assetCreate';
import { IdDTO } from './idDTO';
import { ListingEventCreate } from './listingEventCreate';
import { ListingFeatures } from './listingFeatures';
import { ListingImageCreate } from './listingImageCreate';
import { ListingUtilities } from './listingUtilities';
import { ListingsStatusEnum } from './listingsStatusEnum';
import { ReviewOrderTypeEnum } from './reviewOrderTypeEnum';
import { UnitCreate } from './unitCreate';
import { UnitsSummaryCreate } from './unitsSummaryCreate';

export class ListingUpdate {
    'id': string;
    'additionalApplicationSubmissionNotes'?: string;
    'digitalApplication'?: boolean;
    'commonDigitalApplication'?: boolean;
    'paperApplication'?: boolean;
    'referralOpportunity'?: boolean;
    'accessibility'?: string;
    'amenities'?: string;
    'buildingTotalUnits'?: number;
    'developer'?: string;
    'householdSizeMax'?: number;
    'householdSizeMin'?: number;
    'neighborhood'?: string;
    'petPolicy'?: string;
    'smokingPolicy'?: string;
    'unitsAvailable'?: number;
    'unitAmenities'?: string;
    'servicesOffered'?: string;
    'yearBuilt'?: number;
    'applicationDueDate'?: Date;
    'applicationOpenDate'?: Date;
    'applicationFee'?: string;
    'applicationOrganization'?: string;
    'applicationPickUpAddressOfficeHours'?: string;
    'applicationPickUpAddressType'?: ApplicationAddressTypeEnum;
    'applicationDropOffAddressOfficeHours'?: string;
    'applicationDropOffAddressType'?: ApplicationAddressTypeEnum;
    'applicationMailingAddressType'?: ApplicationAddressTypeEnum;
    'buildingSelectionCriteria'?: string;
    'costsNotIncluded'?: string;
    'creditHistory'?: string;
    'criminalBackground'?: string;
    'depositMin'?: string;
    'depositMax'?: string;
    'depositHelperText'?: string;
    'disableUnitsAccordion'?: boolean;
    'leasingAgentEmail'?: string;
    'leasingAgentName'?: string;
    'leasingAgentOfficeHours'?: string;
    'leasingAgentPhone'?: string;
    'leasingAgentTitle'?: string;
    'name': string;
    'postmarkedApplicationsReceivedByDate'?: Date;
    'programRules'?: string;
    'rentalAssistance'?: string;
    'rentalHistory'?: string;
    'requiredDocuments'?: string;
    'specialNotes'?: string;
    'waitlistCurrentSize'?: number;
    'waitlistMaxSize'?: number;
    'whatToExpect'?: string;
    'status': ListingsStatusEnum;
    'reviewOrderType'?: ReviewOrderTypeEnum;
    'displayWaitlistSize': boolean;
    'reservedCommunityDescription'?: string;
    'reservedCommunityMinAge'?: number;
    'resultLink'?: string;
    'isWaitlistOpen'?: boolean;
    'waitlistOpenSpots'?: number;
    'customMapPin'?: boolean;
    'lastApplicationUpdateAt'?: Date;
    'jurisdictions': IdDTO;
    'reservedCommunityTypes'?: IdDTO;
    'requestedChanges'?: string;
    'requestedChangesDate'?: Date;
    'isExternal'?: boolean;
    'listingMultiselectQuestions'?: Array<IdDTO>;
    'units'?: Array<UnitCreate>;
    'applicationMethods'?: Array<ApplicationMethodCreate>;
    'assets'?: Array<AssetCreate>;
    'unitsSummary': Array<UnitsSummaryCreate>;
    'listingImages'?: Array<ListingImageCreate>;
    'listingsApplicationPickUpAddress'?: AddressCreate;
    'listingsApplicationMailingAddress'?: AddressCreate;
    'listingsApplicationDropOffAddress'?: AddressCreate;
    'listingsLeasingAgentAddress'?: AddressCreate;
    'listingsBuildingAddress'?: AddressCreate;
    'listingsBuildingSelectionCriteriaFile'?: AssetCreate;
    'listingsResult'?: AssetCreate;
    'listingEvents': Array<ListingEventCreate>;
    'listingFeatures'?: ListingFeatures;
    'listingUtilities'?: ListingUtilities;
    'requestedChangesUser'?: IdDTO;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "additionalApplicationSubmissionNotes",
            "baseName": "additionalApplicationSubmissionNotes",
            "type": "string"
        },
        {
            "name": "digitalApplication",
            "baseName": "digitalApplication",
            "type": "boolean"
        },
        {
            "name": "commonDigitalApplication",
            "baseName": "commonDigitalApplication",
            "type": "boolean"
        },
        {
            "name": "paperApplication",
            "baseName": "paperApplication",
            "type": "boolean"
        },
        {
            "name": "referralOpportunity",
            "baseName": "referralOpportunity",
            "type": "boolean"
        },
        {
            "name": "accessibility",
            "baseName": "accessibility",
            "type": "string"
        },
        {
            "name": "amenities",
            "baseName": "amenities",
            "type": "string"
        },
        {
            "name": "buildingTotalUnits",
            "baseName": "buildingTotalUnits",
            "type": "number"
        },
        {
            "name": "developer",
            "baseName": "developer",
            "type": "string"
        },
        {
            "name": "householdSizeMax",
            "baseName": "householdSizeMax",
            "type": "number"
        },
        {
            "name": "householdSizeMin",
            "baseName": "householdSizeMin",
            "type": "number"
        },
        {
            "name": "neighborhood",
            "baseName": "neighborhood",
            "type": "string"
        },
        {
            "name": "petPolicy",
            "baseName": "petPolicy",
            "type": "string"
        },
        {
            "name": "smokingPolicy",
            "baseName": "smokingPolicy",
            "type": "string"
        },
        {
            "name": "unitsAvailable",
            "baseName": "unitsAvailable",
            "type": "number"
        },
        {
            "name": "unitAmenities",
            "baseName": "unitAmenities",
            "type": "string"
        },
        {
            "name": "servicesOffered",
            "baseName": "servicesOffered",
            "type": "string"
        },
        {
            "name": "yearBuilt",
            "baseName": "yearBuilt",
            "type": "number"
        },
        {
            "name": "applicationDueDate",
            "baseName": "applicationDueDate",
            "type": "Date"
        },
        {
            "name": "applicationOpenDate",
            "baseName": "applicationOpenDate",
            "type": "Date"
        },
        {
            "name": "applicationFee",
            "baseName": "applicationFee",
            "type": "string"
        },
        {
            "name": "applicationOrganization",
            "baseName": "applicationOrganization",
            "type": "string"
        },
        {
            "name": "applicationPickUpAddressOfficeHours",
            "baseName": "applicationPickUpAddressOfficeHours",
            "type": "string"
        },
        {
            "name": "applicationPickUpAddressType",
            "baseName": "applicationPickUpAddressType",
            "type": "ApplicationAddressTypeEnum"
        },
        {
            "name": "applicationDropOffAddressOfficeHours",
            "baseName": "applicationDropOffAddressOfficeHours",
            "type": "string"
        },
        {
            "name": "applicationDropOffAddressType",
            "baseName": "applicationDropOffAddressType",
            "type": "ApplicationAddressTypeEnum"
        },
        {
            "name": "applicationMailingAddressType",
            "baseName": "applicationMailingAddressType",
            "type": "ApplicationAddressTypeEnum"
        },
        {
            "name": "buildingSelectionCriteria",
            "baseName": "buildingSelectionCriteria",
            "type": "string"
        },
        {
            "name": "costsNotIncluded",
            "baseName": "costsNotIncluded",
            "type": "string"
        },
        {
            "name": "creditHistory",
            "baseName": "creditHistory",
            "type": "string"
        },
        {
            "name": "criminalBackground",
            "baseName": "criminalBackground",
            "type": "string"
        },
        {
            "name": "depositMin",
            "baseName": "depositMin",
            "type": "string"
        },
        {
            "name": "depositMax",
            "baseName": "depositMax",
            "type": "string"
        },
        {
            "name": "depositHelperText",
            "baseName": "depositHelperText",
            "type": "string"
        },
        {
            "name": "disableUnitsAccordion",
            "baseName": "disableUnitsAccordion",
            "type": "boolean"
        },
        {
            "name": "leasingAgentEmail",
            "baseName": "leasingAgentEmail",
            "type": "string"
        },
        {
            "name": "leasingAgentName",
            "baseName": "leasingAgentName",
            "type": "string"
        },
        {
            "name": "leasingAgentOfficeHours",
            "baseName": "leasingAgentOfficeHours",
            "type": "string"
        },
        {
            "name": "leasingAgentPhone",
            "baseName": "leasingAgentPhone",
            "type": "string"
        },
        {
            "name": "leasingAgentTitle",
            "baseName": "leasingAgentTitle",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "postmarkedApplicationsReceivedByDate",
            "baseName": "postmarkedApplicationsReceivedByDate",
            "type": "Date"
        },
        {
            "name": "programRules",
            "baseName": "programRules",
            "type": "string"
        },
        {
            "name": "rentalAssistance",
            "baseName": "rentalAssistance",
            "type": "string"
        },
        {
            "name": "rentalHistory",
            "baseName": "rentalHistory",
            "type": "string"
        },
        {
            "name": "requiredDocuments",
            "baseName": "requiredDocuments",
            "type": "string"
        },
        {
            "name": "specialNotes",
            "baseName": "specialNotes",
            "type": "string"
        },
        {
            "name": "waitlistCurrentSize",
            "baseName": "waitlistCurrentSize",
            "type": "number"
        },
        {
            "name": "waitlistMaxSize",
            "baseName": "waitlistMaxSize",
            "type": "number"
        },
        {
            "name": "whatToExpect",
            "baseName": "whatToExpect",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "ListingsStatusEnum"
        },
        {
            "name": "reviewOrderType",
            "baseName": "reviewOrderType",
            "type": "ReviewOrderTypeEnum"
        },
        {
            "name": "displayWaitlistSize",
            "baseName": "displayWaitlistSize",
            "type": "boolean"
        },
        {
            "name": "reservedCommunityDescription",
            "baseName": "reservedCommunityDescription",
            "type": "string"
        },
        {
            "name": "reservedCommunityMinAge",
            "baseName": "reservedCommunityMinAge",
            "type": "number"
        },
        {
            "name": "resultLink",
            "baseName": "resultLink",
            "type": "string"
        },
        {
            "name": "isWaitlistOpen",
            "baseName": "isWaitlistOpen",
            "type": "boolean"
        },
        {
            "name": "waitlistOpenSpots",
            "baseName": "waitlistOpenSpots",
            "type": "number"
        },
        {
            "name": "customMapPin",
            "baseName": "customMapPin",
            "type": "boolean"
        },
        {
            "name": "lastApplicationUpdateAt",
            "baseName": "lastApplicationUpdateAt",
            "type": "Date"
        },
        {
            "name": "jurisdictions",
            "baseName": "jurisdictions",
            "type": "IdDTO"
        },
        {
            "name": "reservedCommunityTypes",
            "baseName": "reservedCommunityTypes",
            "type": "IdDTO"
        },
        {
            "name": "requestedChanges",
            "baseName": "requestedChanges",
            "type": "string"
        },
        {
            "name": "requestedChangesDate",
            "baseName": "requestedChangesDate",
            "type": "Date"
        },
        {
            "name": "isExternal",
            "baseName": "isExternal",
            "type": "boolean"
        },
        {
            "name": "listingMultiselectQuestions",
            "baseName": "listingMultiselectQuestions",
            "type": "Array<IdDTO>"
        },
        {
            "name": "units",
            "baseName": "units",
            "type": "Array<UnitCreate>"
        },
        {
            "name": "applicationMethods",
            "baseName": "applicationMethods",
            "type": "Array<ApplicationMethodCreate>"
        },
        {
            "name": "assets",
            "baseName": "assets",
            "type": "Array<AssetCreate>"
        },
        {
            "name": "unitsSummary",
            "baseName": "unitsSummary",
            "type": "Array<UnitsSummaryCreate>"
        },
        {
            "name": "listingImages",
            "baseName": "listingImages",
            "type": "Array<ListingImageCreate>"
        },
        {
            "name": "listingsApplicationPickUpAddress",
            "baseName": "listingsApplicationPickUpAddress",
            "type": "AddressCreate"
        },
        {
            "name": "listingsApplicationMailingAddress",
            "baseName": "listingsApplicationMailingAddress",
            "type": "AddressCreate"
        },
        {
            "name": "listingsApplicationDropOffAddress",
            "baseName": "listingsApplicationDropOffAddress",
            "type": "AddressCreate"
        },
        {
            "name": "listingsLeasingAgentAddress",
            "baseName": "listingsLeasingAgentAddress",
            "type": "AddressCreate"
        },
        {
            "name": "listingsBuildingAddress",
            "baseName": "listingsBuildingAddress",
            "type": "AddressCreate"
        },
        {
            "name": "listingsBuildingSelectionCriteriaFile",
            "baseName": "listingsBuildingSelectionCriteriaFile",
            "type": "AssetCreate"
        },
        {
            "name": "listingsResult",
            "baseName": "listingsResult",
            "type": "AssetCreate"
        },
        {
            "name": "listingEvents",
            "baseName": "listingEvents",
            "type": "Array<ListingEventCreate>"
        },
        {
            "name": "listingFeatures",
            "baseName": "listingFeatures",
            "type": "ListingFeatures"
        },
        {
            "name": "listingUtilities",
            "baseName": "listingUtilities",
            "type": "ListingUtilities"
        },
        {
            "name": "requestedChangesUser",
            "baseName": "requestedChangesUser",
            "type": "IdDTO"
        }    ];

    static getAttributeTypeMap() {
        return ListingUpdate.attributeTypeMap;
    }
}

export namespace ListingUpdate {
}
